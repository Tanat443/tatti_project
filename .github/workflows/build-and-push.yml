name: Build & Push All Microservices

on:
  push:
    branches:
      - master

jobs:
  build-and-push-user-service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build user-service with Gradle
        run: ./gradlew bootJar
        working-directory: ./tatti_app/user-service

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image for user-service
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/user-service .
        working-directory: ./tatti_app/user-service

      - name: Push Docker image for user-service
        run: docker push ${{ secrets.DOCKER_USERNAME }}/user-service

  build-and-push-order-service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build order-service with Gradle
        run: ./gradlew bootJar
        working-directory: ./tatti_app/order-service

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image for order-service
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/order-service .
        working-directory: ./tatti_app/order-service

      - name: Push Docker image for order-service
        run: docker push ${{ secrets.DOCKER_USERNAME }}/order-service

  build-and-push-product-service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build product-service with Gradle
        run: ./gradlew bootJar
        working-directory: ./tatti_app/product-service

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image for product-service
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/product-service .
        working-directory: ./tatti_app/product-service

      - name: Push Docker image for product-service
        run: docker push ${{ secrets.DOCKER_USERNAME }}/product-service

  build-and-push-api-gateway:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build api-gateway with Gradle
        run: ./gradlew bootJar
        working-directory: ./tatti_app/api-gateway

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image for api-gateway
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/api-gateway .
        working-directory: ./tatti_app/api-gateway

      - name: Push Docker image for api-gateway
        run: docker push ${{ secrets.DOCKER_USERNAME }}/api-gateway

  build-and-push-eureka-server:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build eureka-server with Gradle
        run: ./gradlew bootJar
        working-directory: ./tatti_app/eureka-server

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image for eureka-server
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/eureka-server .
        working-directory: ./tatti_app/eureka-server

      - name: Push Docker image for eureka-server
        run: docker push ${{ secrets.DOCKER_USERNAME }}/eureka-server
